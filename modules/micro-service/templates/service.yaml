---
RestartPolicy: ${restart_policy}
ImagePullPolicy: ${image.pullPolicy}
%{if length(keys(resources)) > 0 }
Resources: ${jsonencode(resources)}
%{ endif }
%{if env_from != "[]" }
EnvFrom: ${env_from}
%{ endif }
%{if env != "[]" }
Env: ${env}
%{ endif }
%{if command != "[]" }
Command: ${command}
%{ endif }
%{if args != "[]" }
Args: ${args}
%{ endif }
%{if nodes.selector != null }
NodeSelector: ${jsonencode(nodes.selector)}
%{ endif }
%{if pod_annotations != "{}" }
PodAnnotations: ${pod_annotations}
%{ endif }
%{if pod_labels != "{}" }
PodLabels: ${pod_labels}
%{ endif }
%{if security_context != "{}" }
PodSecurityContext: ${security_context}
%{ endif }
%{if service_account_name != "" }
ServiceAccountName: ${service_account_name}
%{ endif }
%{if host_network != null }
HostNetwork: ${host_network}
%{endif}
%{if volumes != "[]" }
Volumes: ${volumes}
%{ endif }
%{if volume_mounts != "[]" }
VolumesMounts: ${volume_mounts}
%{ endif }
%{if termination_grace_period != null }
terminationGracePeriodSeconds: ${termination_grace_period}
%{ endif }
%{if health_check.enabled }
LivenessProbe: 
  failureThreshold: ${health_check.failureThreshold}
  initialDelaySeconds: ${health_check.initialDelaySeconds}
  periodSeconds: ${health_check.periodSeconds}
  successThreshold: ${health_check.successThreshold}
  timeoutSeconds: ${health_check.timeoutSeconds}
  httpGet: 
    path: ${health_check.path}
    port : ${port}
ReadinessProbe: 
  failureThreshold: ${health_check.failureThreshold}
  initialDelaySeconds: ${health_check.initialDelaySeconds}
  periodSeconds: ${health_check.periodSeconds}
  successThreshold: ${health_check.successThreshold}
  timeoutSeconds : ${health_check.timeoutSeconds}
  httpGet: 
    path: ${health_check.path}
    port: ${port}
%{ endif }
# add all the sidecars into the additionalContainers key but only add the key if there are sidecars
%{ if length(sidecars) > 0 }
additionalContainers: 
%{ for sidecar in sidecars ~}
  - name: ${sidecar.name}
    image: ${sidecar.image}
%{ endfor ~}
%{ endif }
